/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["vendors-node_modules_bnc-onboard_dist_esm_ledger-e33a98e5_js"],{

/***/ "./node_modules/bnc-onboard/dist/esm/ledger-e33a98e5.js":
/*!**************************************************************!*\
  !*** ./node_modules/bnc-onboard/dist/esm/ledger-e33a98e5.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar ledgerIcon = \"\\n\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 450 450\\\" width=\\\"37\\\" height=\\\"37\\\"><style>.st0{fill:currentColor}</style><g id=\\\"squares_1_\\\"><path class=\\\"st0\\\" d=\\\"M578.2 392.7V24.3h25.6v344.1h175.3v24.3H578.2zm327.5 5.1c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5H804.6c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.3 2.6-28.9 3.9-43.5 3.8zM898 135.6c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm238-21.8c19.2 0 37.1 3.8 51.2 10.2 14.1 7.7 26.9 19.2 38.4 37.1h1.3c-1.3-21.7-1.3-42.2-1.3-62.7V0h24.3v392.7h-16.6l-6.4-42.2c-20.5 30.7-51.2 47.3-89.6 47.3s-66.5-11.5-87-35.8c-20.5-23-29.4-57.6-29.4-102.3 0-47.3 10.2-83.2 29.4-108.7 19.2-25.6 48.6-37.2 85.7-37.2zm0 21.8c-29.4 0-52.4 10.2-67.8 32-15.3 20.5-23 51.2-23 92.1 0 78 30.7 116.4 90.8 116.4 30.7 0 53.7-9 67.8-26.9 14.1-17.9 21.7-47.3 21.7-89.6v-3.8c0-42.2-7.7-72.9-21.7-90.8-12.8-20.5-35.8-29.4-67.8-29.4zm379.9-16.6v17.9l-56.3 3.8c15.3 19.2 23 39.7 23 61.4 0 26.9-9 47.3-26.9 64-17.9 16.6-40.9 24.3-70.4 24.3-12.8 0-21.7 0-25.6-1.3-10.2 5.1-17.9 11.5-23 17.9-5.1 7.7-7.7 14.1-7.7 23s3.8 15.3 10.2 19.2c6.4 3.8 17.9 6.4 33.3 6.4h47.3c29.4 0 52.4 6.4 67.8 17.9s24.3 29.4 24.3 53.7c0 29.4-11.5 51.2-34.5 66.5-23 15.3-56.3 23-99.8 23-34.5 0-61.4-6.4-80.6-20.5-19.2-12.8-28.1-32-28.1-55 0-19.2 6.4-34.5 17.9-47.3s28.1-20.5 47.3-25.6c-7.7-3.8-15.3-9-19.2-15.3-5-6.2-7.7-13.8-7.7-21.7 0-17.9 11.5-34.5 34.5-48.6-15.3-6.4-28.1-16.6-37.1-30.7-9-14.1-12.8-30.7-12.8-48.6 0-26.9 9-49.9 25.6-66.5 17.9-16.6 40.9-24.3 70.4-24.3 17.9 0 32 1.3 42.2 5.1h85.7v1.3h.2zm-222.6 319.8c0 37.1 28.1 56.3 84.4 56.3 71.6 0 107.5-23 107.5-69.1 0-16.6-5.1-28.1-16.6-35.8-11.5-7.7-29.4-11.5-55-11.5h-44.8c-49.9 1.2-75.5 20.4-75.5 60.1zm21.8-235.4c0 21.7 6.4 37.1 19.2 49.9 12.8 11.5 29.4 17.9 51.2 17.9 23 0 40.9-6.4 52.4-17.9 12.8-11.5 17.9-28.1 17.9-49.9 0-23-6.4-40.9-19.2-52.4-12.8-11.5-29.4-17.9-52.4-17.9-21.7 0-39.7 6.4-51.2 19.2-12.8 11.4-17.9 29.3-17.9 51.1z\\\"/><path class=\\\"st0\\\" d=\\\"M1640 397.8c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5h-197c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.1 2.6-28.2 3.8-44.8 3.8zm-6.4-262.2c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm245.6-21.8c11.5 0 24.3 1.3 37.1 3.8l-5.1 24.3c-11.8-2.6-23.8-3.9-35.8-3.8-23 0-42.2 10.2-57.6 29.4-15.3 20.5-23 44.8-23 75.5v149.7h-25.6V119h21.7l2.6 49.9h1.3c11.5-20.5 23-34.5 35.8-42.2 15.4-9 30.7-12.9 48.6-12.9zM333.9 12.8h-183v245.6h245.6V76.7c.1-34.5-28.1-63.9-62.6-63.9zm-239.2 0H64c-34.5 0-64 28.1-64 64v30.7h94.7V12.8zM0 165h94.7v94.7H0V165zm301.9 245.6h30.7c34.5 0 64-28.1 64-64V316h-94.7v94.6zm-151-94.6h94.7v94.7h-94.7V316zM0 316v30.7c0 34.5 28.1 64 64 64h30.7V316H0z\\\"/></g></svg>\\n\";\nvar LEDGER_LIVE_PATH = \"m/44'/60'\";\nvar ACCOUNTS_TO_GET = 5;\n\nfunction ledger(options) {\n  var rpcUrl = options.rpcUrl,\n      LedgerTransport = options.LedgerTransport,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Ledger',\n    svg: svg || ledgerIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return ledgerProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  LedgerTransport: LedgerTransport,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Ledger',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction ledgerProvider(_x2) {\n  return _ledgerProvider.apply(this, arguments);\n}\n\nfunction _ledgerProvider() {\n  _ledgerProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(options) {\n    var _yield$import, createProvider, _yield$import2, generateAddresses, isValidPath, _yield$import3, Eth, EthereumTx, ethUtil, buffer, _yield$import4, TypedDataUtils, domainHash, messageHash, networkId, rpcUrl, LedgerTransport, BigNumber, networkName, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, transport, transportSubscription, eth, disconnect, setPath, _setPath, isCustomPath, createTransport, _createTransport, enable, addresses, setPrimaryAccount, getAddress, _getAddress, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, _signTransaction, _signTransaction2, _signMessage, _signMessage2, _signTypedMessage, _signTypedMessage2;\n\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _signTypedMessage2 = function _signTypedMessage4() {\n              _signTypedMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(_ref4) {\n                var data, path;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        data = _ref4.data;\n\n                        if (!(addressToPath.size === 0)) {\n                          _context14.next = 4;\n                          break;\n                        }\n\n                        _context14.next = 4;\n                        return enable();\n\n                      case 4:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        return _context14.abrupt(\"return\", eth.signEIP712HashedMessage(path, ethUtil.bufferToHex(domainHash(data)), ethUtil.bufferToHex(messageHash(data))).then(function (result) {\n                          var v = (result['v'] - 27).toString(16);\n\n                          if (v.length < 2) {\n                            v = '0' + v;\n                          }\n\n                          return \"0x\".concat(result['r']).concat(result['s']).concat(v);\n                        }));\n\n                      case 6:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14);\n              }));\n              return _signTypedMessage2.apply(this, arguments);\n            };\n\n            _signTypedMessage = function _signTypedMessage3(_x10) {\n              return _signTypedMessage2.apply(this, arguments);\n            };\n\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(message) {\n                var path;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context13.next = 3;\n                          break;\n                        }\n\n                        _context13.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        return _context13.abrupt(\"return\", eth.signPersonalMessage(path, ethUtil.stripHexPrefix(message.data)).then(function (result) {\n                          var v = (result['v'] - 27).toString(16);\n\n                          if (v.length < 2) {\n                            v = '0' + v;\n                          }\n\n                          return \"0x\".concat(result['r']).concat(result['s']).concat(v);\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(transactionData) {\n                var path, transaction, ledgerResult;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        _context12.prev = 1;\n                        transaction = new EthereumTx.Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        transaction.raw[6] = buffer.Buffer.from([networkId]); // v\n\n                        transaction.raw[7] = buffer.Buffer.from([]); // r\n\n                        transaction.raw[8] = buffer.Buffer.from([]); // s\n\n                        _context12.next = 8;\n                        return eth.signTransaction(path, transaction.serialize().toString('hex'));\n\n                      case 8:\n                        ledgerResult = _context12.sent;\n                        transaction.v = buffer.Buffer.from(ledgerResult.v, 'hex');\n                        transaction.r = buffer.Buffer.from(ledgerResult.r, 'hex');\n                        transaction.s = buffer.Buffer.from(ledgerResult.s, 'hex');\n                        return _context12.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                        _context12.prev = 15;\n                        _context12.t0 = _context12[\"catch\"](1);\n                        throw _context12.t0;\n\n                      case 18:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[1, 15]]);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(getMore) {\n                var currentAccounts, paths, i, _i2, _paths, path, res, addressInfo;\n\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (enabled) {\n                          _context11.next = 2;\n                          break;\n                        }\n\n                        return _context11.abrupt(\"return\", []);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context11.next = 4;\n                          break;\n                        }\n\n                        return _context11.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (eth) {\n                          _context11.next = 7;\n                          break;\n                        }\n\n                        _context11.next = 7;\n                        return createTransport();\n\n                      case 7:\n                        if (dPath === '') {\n                          dPath = LEDGER_LIVE_PATH;\n                        }\n\n                        if (!(dPath === LEDGER_LIVE_PATH)) {\n                          _context11.next = 24;\n                          break;\n                        }\n\n                        currentAccounts = addressToPath.size;\n                        paths = [];\n\n                        for (i = currentAccounts; i < ACCOUNTS_TO_GET + currentAccounts; i++) {\n                          paths.push(\"\".concat(LEDGER_LIVE_PATH, \"/\").concat(i, \"'/0/0\"));\n                        }\n\n                        _i2 = 0, _paths = paths;\n\n                      case 13:\n                        if (!(_i2 < _paths.length)) {\n                          _context11.next = 22;\n                          break;\n                        }\n\n                        path = _paths[_i2];\n                        _context11.next = 17;\n                        return eth.getAddress(path);\n\n                      case 17:\n                        res = _context11.sent;\n                        addressToPath.set(res.address, path);\n\n                      case 19:\n                        _i2++;\n                        _context11.next = 13;\n                        break;\n\n                      case 22:\n                        _context11.next = 36;\n                        break;\n\n                      case 24:\n                        if (account) {\n                          _context11.next = 34;\n                          break;\n                        }\n\n                        _context11.prev = 25;\n                        _context11.next = 28;\n                        return getPublicKey();\n\n                      case 28:\n                        account = _context11.sent;\n                        _context11.next = 34;\n                        break;\n\n                      case 31:\n                        _context11.prev = 31;\n                        _context11.t0 = _context11[\"catch\"](25);\n                        throw _context11.t0;\n\n                      case 34:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref5) {\n                          var dPath = _ref5.dPath,\n                              address = _ref5.address;\n                          addressToPath.set(address, dPath);\n                        });\n\n                      case 36:\n                        return _context11.abrupt(\"return\", addresses());\n\n                      case 37:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, null, [[25, 31]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context10.sent;\n                        return _context10.abrupt(\"return\", accounts && getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var result, publicKey, chainCode;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        if (dPath) {\n                          _context9.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        if (eth) {\n                          _context9.next = 5;\n                          break;\n                        }\n\n                        _context9.next = 5;\n                        return createTransport();\n\n                      case 5:\n                        _context9.prev = 5;\n                        _context9.next = 8;\n                        return eth.getAddress(dPath, false, true);\n\n                      case 8:\n                        result = _context9.sent;\n                        publicKey = result.publicKey, chainCode = result.chainCode;\n                        account = {\n                          publicKey: publicKey,\n                          chainCode: chainCode,\n                          path: dPath\n                        };\n                        return _context9.abrupt(\"return\", account);\n\n                      case 14:\n                        _context9.prev = 14;\n                        _context9.t0 = _context9[\"catch\"](5);\n                        throw new Error('There was a problem accessing your Ledger accounts.');\n\n                      case 17:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[5, 14]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(path) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (eth) {\n                          _context8.next = 3;\n                          break;\n                        }\n\n                        _context8.next = 3;\n                        return createTransport();\n\n                      case 3:\n                        _context8.prev = 3;\n                        _context8.next = 6;\n                        return eth.getAddress(path);\n\n                      case 6:\n                        result = _context8.sent;\n                        return _context8.abrupt(\"return\", result.address);\n\n                      case 10:\n                        _context8.prev = 10;\n                        _context8.t0 = _context8[\"catch\"](3);\n\n                      case 12:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[3, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            _createTransport = function _createTransport3() {\n              _createTransport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var observer, Transport;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        observer = {\n                          next: function next(event) {\n                            if (event.type === 'remove') {\n                              disconnect();\n                            }\n                          },\n                          error: function error() {},\n                          complete: function complete() {}\n                        }; // Get the Transport class\n\n                        _context7.t0 = LedgerTransport;\n\n                        if (_context7.t0) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        _context7.next = 6;\n                        return supportsWebUSB();\n\n                      case 6:\n                        _context7.t0 = _context7.sent;\n\n                      case 7:\n                        if (!_context7.t0) {\n                          _context7.next = 13;\n                          break;\n                        }\n\n                        _context7.next = 10;\n                        return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_errors_dist_index_js-node_modules_ledgerhq_logs_lib-es_index_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_hw-transport-webusb_lib-es_TransportWebUSB_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @ledgerhq/hw-transport-webusb */ \"./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js\"));\n\n                      case 10:\n                        _context7.t1 = _context7.sent[\"default\"];\n                        _context7.next = 16;\n                        break;\n\n                      case 13:\n                        _context7.next = 15;\n                        return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_errors_dist_index_js-node_modules_ledgerhq_logs_lib-es_index_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_hw-transport-u2f_lib-es_TransportU2F_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @ledgerhq/hw-transport-u2f */ \"./node_modules/@ledgerhq/hw-transport-u2f/lib-es/TransportU2F.js\"));\n\n                      case 15:\n                        _context7.t1 = _context7.sent[\"default\"];\n\n                      case 16:\n                        Transport = _context7.t1;\n                        _context7.next = 19;\n                        return Transport.create();\n\n                      case 19:\n                        transport = _context7.sent;\n                        eth = new Eth(transport);\n                        Transport.listen(observer);\n                        _context7.next = 27;\n                        break;\n\n                      case 24:\n                        _context7.prev = 24;\n                        _context7.t2 = _context7[\"catch\"](0);\n                        throw new Error('Error connecting to Ledger wallet');\n\n                      case 27:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 24]]);\n              }));\n              return _createTransport.apply(this, arguments);\n            };\n\n            createTransport = function _createTransport2() {\n              return _createTransport.apply(this, arguments);\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 10;\n                          break;\n                        }\n\n                        _context6.next = 6;\n                        return getAddress(path);\n\n                      case 6:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 10:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 13:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              var _transport;\n\n              (_transport = transport) === null || _transport === void 0 ? void 0 : _transport.close();\n              transportSubscription === null || transportSubscription === void 0 ? void 0 : transportSubscription.unsubscribe();\n              provider.stop();\n              resetWalletState({\n                disconnected: true,\n                walletName: 'Ledger'\n              });\n            };\n\n            _context15.next = 28;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_create-hash_browser_js-node_modules_elliptic_lib_elliptic_js-node_module-ad4815\"), __webpack_require__.e(\"vendors-node_modules_assert_build_assert_js-node_modules_assert_build_internal_assert_asserti-d1eadf\"), __webpack_require__.e(\"vendors-node_modules_eth-block-tracker_src_polling_js-node_modules_eth-json-rpc-filters_subsc-c58c54\"), __webpack_require__.e(\"vendors-node_modules_ethereumjs-abi_index_js\"), __webpack_require__.e(\"vendors-node_modules_json-stable-stringify_index_js-node_modules_lodash_keys_js-node_modules_-f278bc\"), __webpack_require__.e(\"vendors-node_modules_async_eachSeries_js-node_modules_async_map_js-node_modules_async_paralle-cac9b5\"), __webpack_require__.e(\"vendors-node_modules_bnc-onboard_dist_esm_providerEngine-413ddff7_js\"), __webpack_require__.e(\"_4ad5-_3fc0-_802b-_1e44-_3e83-_19e6\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./providerEngine-413ddff7.js */ \"./node_modules/bnc-onboard/dist/esm/providerEngine-413ddff7.js\"));\n\n          case 28:\n            _yield$import = _context15.sent;\n            createProvider = _yield$import[\"default\"];\n            _context15.next = 32;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_create-hash_browser_js-node_modules_elliptic_lib_elliptic_js-node_module-ad4815\"), __webpack_require__.e(\"vendors-node_modules_assert_build_assert_js-node_modules_assert_build_internal_assert_asserti-d1eadf\"), __webpack_require__.e(\"vendors-node_modules_crypto-browserify_index_js\"), __webpack_require__.e(\"vendors-node_modules_bnc-onboard_node_modules_ethereumjs-util_dist_browser_index_js\"), __webpack_require__.e(\"vendors-node_modules_hdkey_lib_hdkey_js\"), __webpack_require__.e(\"node_modules_bnc-onboard_dist_esm_hd-wallet-6fc43476_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./hd-wallet-6fc43476.js */ \"./node_modules/bnc-onboard/dist/esm/hd-wallet-6fc43476.js\"));\n\n          case 32:\n            _yield$import2 = _context15.sent;\n            generateAddresses = _yield$import2.generateAddresses;\n            isValidPath = _yield$import2.isValidPath;\n            _context15.next = 37;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_errors_dist_index_js-node_modules_ledgerhq_logs_lib-es_index_js\"), __webpack_require__.e(\"vendors-node_modules_ethers_lib_esm_index_js\"), __webpack_require__.e(\"vendors-node_modules_ledgerhq_hw-app-eth_lib-es_Eth_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @ledgerhq/hw-app-eth */ \"./node_modules/@ledgerhq/hw-app-eth/lib-es/Eth.js\"));\n\n          case 37:\n            _yield$import3 = _context15.sent;\n            Eth = _yield$import3[\"default\"];\n            _context15.next = 41;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_create-hash_browser_js-node_modules_elliptic_lib_elliptic_js-node_module-ad4815\"), __webpack_require__.e(\"vendors-node_modules_assert_build_assert_js-node_modules_assert_build_internal_assert_asserti-d1eadf\"), __webpack_require__.e(\"vendors-node_modules_ethereumjs-common_dist_index_js\"), __webpack_require__.e(\"vendors-node_modules_bnc-onboard_node_modules_ethereumjs-tx_dist_index_js\"), __webpack_require__.e(\"_c24f-_3fc0-_802b-_1e44-_3e83-_19e6\")]).then(__webpack_require__.bind(__webpack_require__, /*! ethereumjs-tx */ \"./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/index.js\"));\n\n          case 41:\n            EthereumTx = _context15.sent;\n            _context15.next = 44;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_create-hash_browser_js-node_modules_elliptic_lib_elliptic_js-node_module-ad4815\"), __webpack_require__.e(\"vendors-node_modules_assert_build_assert_js-node_modules_assert_build_internal_assert_asserti-d1eadf\"), __webpack_require__.e(\"vendors-node_modules_bnc-onboard_node_modules_ethereumjs-util_dist_browser_index_js\"), __webpack_require__.e(\"_3a49-_3fc0-_802b-_1e44-_3e83-_19e6\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! ethereumjs-util */ \"./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist.browser/index.js\", 23));\n\n          case 44:\n            ethUtil = _context15.sent;\n            _context15.next = 47;\n            return __webpack_require__.e(/*! import() */ \"vendors-node_modules_buffer_index_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! buffer */ \"./node_modules/buffer/index.js\", 19));\n\n          case 47:\n            buffer = _context15.sent;\n            _context15.next = 50;\n            return Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_buffer_index_js\"), __webpack_require__.e(\"vendors-node_modules_events_events_js\"), __webpack_require__.e(\"vendors-node_modules_create-hash_browser_js-node_modules_elliptic_lib_elliptic_js-node_module-ad4815\"), __webpack_require__.e(\"vendors-node_modules_assert_build_assert_js-node_modules_assert_build_internal_assert_asserti-d1eadf\"), __webpack_require__.e(\"vendors-node_modules_ethereumjs-abi_index_js\"), __webpack_require__.e(\"vendors-node_modules_bnc-onboard_node_modules_eth-sig-util_dist_index_js\"), __webpack_require__.e(\"_0237-_f223-_3fc0-_802b-_1e44-_3e83-_19e6-_44dc\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! eth-sig-util */ \"./node_modules/bnc-onboard/node_modules/eth-sig-util/dist/index.js\", 23));\n\n          case 50:\n            _yield$import4 = _context15.sent;\n            TypedDataUtils = _yield$import4.TypedDataUtils;\n\n            domainHash = function domainHash(message) {\n              return TypedDataUtils.hashStruct('EIP712Domain', message.domain, message.types, true);\n            };\n\n            messageHash = function messageHash(message) {\n              return TypedDataUtils.hashStruct(message.primaryType, message.message, message.types, true);\n            };\n\n            networkId = options.networkId, rpcUrl = options.rpcUrl, LedgerTransport = options.LedgerTransport, BigNumber = options.BigNumber, networkName = options.networkName, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTypedMessage: function signTypedMessage(messageData, callback) {\n                _signTypedMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context15.abrupt(\"return\", provider);\n\n          case 73:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _ledgerProvider.apply(this, arguments);\n}\n\nvar supportsWebUSB = function supportsWebUSB() {\n  return Promise.resolve(!!navigator && !!navigator.usb && typeof navigator.usb.getDevices === 'function');\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ledger);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bnc-onboard/dist/esm/ledger-e33a98e5.js\n");

/***/ })

}]);